import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;
import org.apache.spark.ml.linalg.BLAS;
import org.apache.spark.ml.linalg.Vector;
import org.apache.spark.ml.linalg.Vectors;
import org.apache.spark.sql.SparkSession;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
/**
 * Hello world!
 *
 */
public class App 
{


    public static void main( String[] args )
    {

        SparkConf conf = new SparkConf().setAppName("matrix").setMaster("local[3]");
        JavaSparkContext sc = new JavaSparkContext(conf);

        Vector o = Vectors.dense(0.07115144282579422,0.1423652470111847,0.06867276877164841,0.24043139815330505,-0.020187577232718468,0.03128111734986305,0.1330164670944214,-0.021019916981458664,0.16741874814033508,0.04409516230225563,0.048873383551836014,-0.14807605743408203,-0.19424425065517426,0.1654554009437561,-0.04913778603076935,0.11665057390928268,-0.08217816054821014,-0.1088702380657196,-0.054408419877290726,-0.12380465120077133,0.14173968136310577,0.12521237134933472,0.10571927577257156,0.07728731632232666,-0.11869495362043381,-0.04134526476264,-0.12374509871006012,0.15875031054019928,0.0785631313920021,-0.24225839972496033,0.1348411738872528,0.0946749672293663,0.24202555418014526,-0.10257880389690399,0.029735157266259193,-0.13911864161491394,0.17483636736869812,-0.2665911316871643,0.12022915482521057,0.02715718373656273,0.04420281574130058,0.20643576979637146,-0.1122271940112114,0.05331706628203392,-0.18920858204364777,-0.3729410469532013,0.17054185271263123,-0.12410519272089005,-0.08138079196214676,-0.08444537222385406,0.028396161273121834,0.19340497255325317,-0.026829708367586136,0.07493659853935242,-0.13832060992717743,-0.13926008343696594,0.18150241672992706,0.054685235023498535,-0.037686340510845184,0.27346253395080566,0.06199435517191887,-0.05037476122379303,-0.03104938380420208,-0.06715469062328339,0.006003391928970814,-0.05773194879293442,-0.11100571602582932,-0.0732039287686348,0.06748323142528534,0.12552689015865326,-0.05175698921084404,-0.0654129907488823,-0.21387501060962677,-0.12825536727905273,0.10950784385204315,-0.2025180160999298,0.3348054587841034,-0.0728774219751358,0.22468359768390656,0.081782266497612,-0.001961363013833761,0.10980208218097687,-0.15988770127296448,0.15337304770946503,0.00914364866912365,-0.13654406368732452,0.09008056670427322,-0.11358308047056198,-0.12067624926567078,0.05079277977347374,0.1155361458659172,0.3101234436035156,0.10099408030509949,0.003933959640562534,-0.007739373482763767,-0.03591318801045418,0.4604543149471283,0.03313673287630081,-0.218636617064476,-0.07297764718532562);

        List<Vector> list = new ArrayList<>();


        for(int i=0;i<1500000;i++){
            double nextDouble = new Random().nextDouble();
            Vector d = Vectors.dense(0.07115144282579422,0.1423652470111847,nextDouble,0.24043139815330505,-0.020187577232718468,0.03128111734986305,0.1330164670944214,nextDouble,0.16741874814033508,0.04409516230225563,nextDouble,-0.14807605743408203,-0.19424425065517426,0.1654554009437561,-0.04913778603076935,nextDouble,-0.08217816054821014,-0.1088702380657196,-0.054408419877290726,-0.12380465120077133,0.14173968136310577,0.12521237134933472,0.10571927577257156,0.07728731632232666,-0.11869495362043381,-0.04134526476264,-0.12374509871006012,0.15875031054019928,0.0785631313920021,-0.24225839972496033,0.1348411738872528,0.0946749672293663,0.24202555418014526,-0.10257880389690399,0.029735157266259193,-0.13911864161491394,0.17483636736869812,-0.2665911316871643,0.12022915482521057,0.02715718373656273,0.04420281574130058,0.20643576979637146,-0.1122271940112114,0.05331706628203392,-0.18920858204364777,-0.3729410469532013,0.17054185271263123,-0.12410519272089005,-0.08138079196214676,-0.08444537222385406,0.028396161273121834,0.19340497255325317,-0.026829708367586136,0.07493659853935242,-0.13832060992717743,-0.13926008343696594+nextDouble,0.18150241672992706,0.054685235023498535+nextDouble,-0.037686340510845184,0.27346253395080566+nextDouble,0.06199435517191887,-0.05037476122379303,-0.03104938380420208,-0.06715469062328339,0.006003391928970814,-0.05773194879293442,-0.11100571602582932,-0.0732039287686348,0.06748323142528534,0.12552689015865326,-0.05175698921084404,-0.0654129907488823+nextDouble,-0.21387501060962677,-0.12825536727905273,0.10950784385204315+nextDouble,-0.2025180160999298,0.3348054587841034,-0.0728774219751358,0.22468359768390656,0.081782266497612,-0.001961363013833761,0.10980208218097687,-0.15988770127296448,0.15337304770946503,0.00914364866912365,-0.13654406368732452,0.09008056670427322,-0.11358308047056198,-0.12067624926567078,0.05079277977347374,0.1155361458659172,0.3101234436035156,0.10099408030509949,0.003933959640562534,-0.007739373482763767,-0.03591318801045418,0.4604543149471283,0.03313673287630081,-0.218636617064476,-0.07297764718532562);
            list.add(d);
        }

        JavaRDD<Vector> distdata = sc.parallelize(list);
        long bg = System.currentTimeMillis();

        distdata.foreach(vector -> {
            double similarty = getSimilarty(o, vector);
        });


        System.out.println("time:"+ (System.currentTimeMillis() - bg)  );


    }

    private static double getSimilarty(Vector o, Vector d) {
        double dot = BLAS.dot(o,d);
        double v1 = Vectors.norm(o, 2.0);
        double v2 = Vectors.norm(d, 2.0);
        return dot / (v1 * v2);
    }
}
